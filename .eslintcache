[{"/Users/rogerbloom/repos/react_routing/src/index.js":"1","/Users/rogerbloom/repos/react_routing/src/App.jsx":"2","/Users/rogerbloom/repos/react_routing/src/views/Home.jsx":"3","/Users/rogerbloom/repos/react_routing/src/components/Navbar.jsx":"4","/Users/rogerbloom/repos/react_routing/src/views/Films.jsx":"5","/Users/rogerbloom/repos/react_routing/src/components/FilmCard.jsx":"6","/Users/rogerbloom/repos/react_routing/src/views/People.jsx":"7","/Users/rogerbloom/repos/react_routing/src/components/PersonCard.jsx":"8"},{"size":197,"mtime":1613490325439,"results":"9","hashOfConfig":"10"},{"size":646,"mtime":1613687869966,"results":"11","hashOfConfig":"10"},{"size":370,"mtime":1613542713938,"results":"12","hashOfConfig":"10"},{"size":925,"mtime":1613681333658,"results":"13","hashOfConfig":"10"},{"size":1108,"mtime":1613687029034,"results":"14","hashOfConfig":"10"},{"size":520,"mtime":1613678380350,"results":"15","hashOfConfig":"10"},{"size":1252,"mtime":1613687151976,"results":"16","hashOfConfig":"10"},{"size":416,"mtime":1613680860333,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"cj2ur9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/rogerbloom/repos/react_routing/src/index.js",[],["37","38"],"/Users/rogerbloom/repos/react_routing/src/App.jsx",[],"/Users/rogerbloom/repos/react_routing/src/views/Home.jsx",[],"/Users/rogerbloom/repos/react_routing/src/components/Navbar.jsx",[],"/Users/rogerbloom/repos/react_routing/src/views/Films.jsx",["39"],"import {useState, useEffect} from \"react\";\nimport FilmCard from \"../components/FilmCard\";\nconst Films = () => {\n    const [filmList, setFilmList] = useState([]);\n\n    useEffect(() => {\n        if (filmList.length === 0){\n        handleFilmFetch();\n        }\n    }, [])\n    const handleFilmFetch = () => {\n        fetch(\"https://ghibliapi.herokuapp.com/films\", {mode: \"cors\"})\n        .then((response) => response.json())\n        .then((result) => setFilmList(result));\n\n\n    }\n    \n    return (\n        <main className=\"container\">\n            <h1>Films</h1>\n            <hr/>\n            <div className=\"row\">\n                <div className=\"card-columns\">\n                    {filmList.map((film) => {\n                        return <FilmCard \n                        key={film.id} \n                        title={film.title} \n                        release_date={film.release_date} \n                        rt_score={film.rt_score} \n                        description={film.description}/>;\n                    })}\n                </div>\n            </div>\n        </main>\n    );\n};\n\nexport default Films","/Users/rogerbloom/repos/react_routing/src/components/FilmCard.jsx",[],"/Users/rogerbloom/repos/react_routing/src/views/People.jsx",["40"],"import {useState, useEffect} from \"react\";\nimport PersonCard from \"../components/PersonCard\";\nconst People = () => {\n    const [people, setPeople] = useState([]);\n\n    useEffect(() => {\n        if (people.length === 0){\n        handleFilmFetch();\n        }\n    }, [])\n    const handleFilmFetch = () => {\n        fetch(\"https://ghibliapi.herokuapp.com/people\", {mode: \"cors\"})\n        .then((response) => response.json())\n        .then((result) => setPeople(result))\n        .catch((error) => console.log(error));\n    }\n    \n    return (\n        <main className=\"container\">\n            <h1>People</h1>\n            <hr/>\n            <div className=\"row\">\n                <div className=\"card-columns\">\n                    {people.map((person) => {\n                        return (\n                            <PersonCard \n                                key={person.id} \n                                name={person.name} \n                                age={person.age}\n                                gender={person.gender}\n                                films={person.films} \n                            />\n                        );\n                    })}\n                </div>\n            </div>\n        </main>\n    );\n};\n\nexport default People","/Users/rogerbloom/repos/react_routing/src/components/PersonCard.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":10,"column":8,"nodeType":"47","endLine":10,"endColumn":10,"suggestions":"48"},{"ruleId":"45","severity":1,"message":"49","line":10,"column":8,"nodeType":"47","endLine":10,"endColumn":10,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filmList.length'. Either include it or remove the dependency array.","ArrayExpression",["53"],"React Hook useEffect has a missing dependency: 'people.length'. Either include it or remove the dependency array.",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [filmList.length]",{"range":"59","text":"60"},"Update the dependencies array to be: [people.length]",{"range":"61","text":"62"},[265,267],"[filmList.length]",[264,266],"[people.length]"]